define magento  (
  $tcp_port = "80",
  $extra_config     = [
    'location @handler {rewrite / /index.php;}',
    'location ~ .php/ {rewrite ^(.*.php)/ $1 last;}',
    'location ~ /\.thumbs {} # Dont skip .thumbs, this is a default directory where Magento places thumbnails',
    'location  /.                     {return 404;}',
    'location ^~ /app/                { return 404; }',
    'location ^~ /includes/           { return 404; }',
    'location ^~ /lib/                { return 404; }',
    'location ^~ /media/downloadable/ { return 404; }',
    'location ^~ /pkginfo/            { return 404; }',
    'location ^~ /report/config.xml   { return 404; }',
    'location ^~ /var/                { return 404; }',
    'location ^~ /.git/               { return 404; }',
    'location ^~ /shell/              { return 404; }',
    'location ^~ /downloader/         { return 404; }'],
  $extra_root_location = ['try_files $uri $uri/ @handler;'],
  $vhost_aliases = '',
  $vhost  = $name,
  $authentication               = [],
  $fastcgi_param = [],
  $php_pool = "unix:/var/run/php5-fpm-${name}.sock",
  $username                     = $nginx::params::username,
  $usergroup                     = $username,
  $document_root = "${nginx::params::document_root}/${name}",
  $https                        = $nginx::params::https,
  $https_tcp_port               = '443',
  $http_to_https               = false,
  $ssl_certificate              = "somecert.crt",
  $ssl_certificate_key          = "somecert.key",
)
{

  nginx::vhost{ $name:
    tcp_port => $tcp_port,
    extra_config => $extra_config,
    vhost_aliases =>$vhost_aliases,
    fastcgi_read_timeout => 3600,
    authentication =>   $authentication,
    fastcgi_param => $fastcgi_param,
    vhost => $vhost,
    php_pool => $php_pool,
    username => $username,
    usergroup => $usergroup,
    document_root => $document_root,
    https => $https,
    http_to_https => $http_to_https,
    https_tcp_port => $https_tcp_port,
    ssl_certificate => $ssl_certificate,
    ssl_certificate_key => $ssl_certificate_key,
  }
}